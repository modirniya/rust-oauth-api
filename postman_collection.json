{
	"info": {
		"_postman_id": "1234567-89ab-cdef-0123-456789abcdef",
		"name": "Rust OAuth API",
		"description": "Collection for testing the Rust OAuth API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Authentication related endpoints",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": ["{{base_url}}"],
							"path": ["register"]
						},
						"description": "Register a new user with email and password. A verification email will be sent."
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.token) {",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": ["{{base_url}}"],
							"path": ["login"]
						},
						"description": "Login with email and password to get JWT token"
					}
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"verification-token-from-email\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/verify-email",
							"host": ["{{base_url}}"],
							"path": ["verify-email"]
						},
						"description": "Verify user's email address using the token received in email"
					}
				},
				{
					"name": "Request Password Reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/request-password-reset",
							"host": ["{{base_url}}"],
							"path": ["request-password-reset"]
						},
						"description": "Request a password reset token to be sent to the user's email"
					}
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"reset-token-from-email\",\n    \"new_password\": \"new-password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/reset-password",
							"host": ["{{base_url}}"],
							"path": ["reset-password"]
						},
						"description": "Reset user's password using the token received in email"
					}
				}
			]
		},
		{
			"name": "Protected Routes",
			"description": "Routes that require authentication",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/me",
							"host": ["{{base_url}}"],
							"path": ["me"]
						},
						"description": "Get current user's information"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8080",
			"type": "string"
		}
	]
} 